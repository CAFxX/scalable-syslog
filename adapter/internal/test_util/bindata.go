// Code generated by go-bindata.
// sources:
// scalable-syslog-certs/adapter-rlp.crt
// scalable-syslog-certs/adapter-rlp.csr
// scalable-syslog-certs/adapter-rlp.key
// scalable-syslog-certs/adapter.crt
// scalable-syslog-certs/adapter.csr
// scalable-syslog-certs/adapter.key
// scalable-syslog-certs/fake-log-provider.crt
// scalable-syslog-certs/fake-log-provider.csr
// scalable-syslog-certs/fake-log-provider.key
// scalable-syslog-certs/loggregator-ca.crl
// scalable-syslog-certs/loggregator-ca.crt
// scalable-syslog-certs/loggregator-ca.key
// scalable-syslog-certs/scalable-syslog-ca.crl
// scalable-syslog-certs/scalable-syslog-ca.crt
// scalable-syslog-certs/scalable-syslog-ca.key
// scalable-syslog-certs/scheduler.crt
// scalable-syslog-certs/scheduler.csr
// scalable-syslog-certs/scheduler.key
// DO NOT EDIT!

package test_util

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _adapterRlpCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKjCCAhKgAwIBAgIQERePPW3qbSvKZnkNmqRW+zANBgkqhkiG9w0BAQsFADAZ
MRcwFQYDVQQDEw5sb2dncmVnYXRvci1jYTAeFw0xNzAzMTQxNTM5MzlaFw0xOTAz
MTQxNTM5MzlaMBYxFDASBgNVBAMTC2FkYXB0ZXItcmxwMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAqaK6Jl0o83VgOvcwMjqDloBexVXJkj/v7UZJtUDk
tNKCPhoLJeZ1p34qxMdwQONov9dInpsCgAx/iqMiOVQYR6lnScISsqq7+6CwA39/
E30wdjyWZvqJl2xQtbqr+DRaZ5HjTNlxajNPv0zs93BVeUnJPC9257NankXNINAL
93aTwrtBUf3WmrGuoEJzPrWVsgpzkHqTnahT/qzcJojtp3e2+l4jlbFYgoFtcFru
C9qKAJK2TlzIGL/HFWXKovGmyXtzv6KpUyAeya5QbjR6GE+nWjHx6SfodhV5lj22
hUEinDYIKyK9J1mFsSPAuGhYLJTV/wM7lcZCLx3Pz3YpSQIDAQABo3EwbzAOBgNV
HQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1Ud
DgQWBBRE7cgc5wytgoauC1skCMr2iBFAHjAfBgNVHSMEGDAWgBRyxNuHr10PLsF5
sGGcWxKgNFMMcjANBgkqhkiG9w0BAQsFAAOCAgEAv1fkLEnOX/RVf9/KLZ0tmwCA
eXM0710PqRkXIBCWa8LsvqN0B8vJl4Ys1Xgg7VbQQrlvotbYok8EIZ6W0svaEMoM
t8Y+XyZ67a1SalovCGra2N0GRp/xvIVH0bSQ2EFX5DYzWvn4WJYzLPVzZOEY4dSR
bpGpCJzSX37e+1S4NCRexXNmPUsOXD0IGJ1ekycJqRKxf9CqZ9wETaxpImysbbp2
JuEO/jsOBSD5NwbzUzXcMKAr6F7+P+W7/dcAqpoyJgjfyn1E7zRnlEvXtgUi3UvR
8M6x28bvhBwUFEeT6lYLO47ZSwK9IVTdo0HEhj0mQpucfXV1ZXIergHRXM2RfbaL
Uzgb59iiaETRh9MudTWp3rXbZh7HisWbo3CtgGPLm2VQTOsM5mGdpuKxEL3z/Q+L
BA+x4rlzjLjlD0nhwoZL48O+GQcyywlR6WnJ954xB7s856ySrp9JJ02Uk4Rvy/qO
EL1fV2MWYhEBf1x3xnsIt8/pH3A7G89f8BvzObgCU8w/Tl1tPJKIfvUYT5kezBEz
AXYmCDpRjNCu+hmwNfXAt+27nTbwiJHcNww8Oq1+BV2dClrkoqSgaPD4GShZ/Scb
3u4LPgZN1I2BgZ9cctg9E0w03iggFrYZQvuQfzKujlVsUAl/zULCDOLgyWirEb5s
MULOfZ/m0tVXJW9iu8I=
-----END CERTIFICATE-----
`)

func adapterRlpCrtBytes() ([]byte, error) {
	return _adapterRlpCrt, nil
}

func adapterRlpCrt() (*asset, error) {
	bytes, err := adapterRlpCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.crt", size: 1505, mode: os.FileMode(292), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterRlpCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWzCCAUMCAQAwFjEUMBIGA1UEAxMLYWRhcHRlci1ybHAwggEiMA0GCSqGSIb3
DQEBAQUAA4IBDwAwggEKAoIBAQCporomXSjzdWA69zAyOoOWgF7FVcmSP+/tRkm1
QOS00oI+Ggsl5nWnfirEx3BA42i/10iemwKADH+KoyI5VBhHqWdJwhKyqrv7oLAD
f38TfTB2PJZm+omXbFC1uqv4NFpnkeNM2XFqM0+/TOz3cFV5Sck8L3bns1qeRc0g
0Av3dpPCu0FR/daasa6gQnM+tZWyCnOQepOdqFP+rNwmiO2nd7b6XiOVsViCgW1w
Wu4L2ooAkrZOXMgYv8cVZcqi8abJe3O/oqlTIB7JrlBuNHoYT6daMfHpJ+h2FXmW
PbaFQSKcNggrIr0nWYWxI8C4aFgslNX/AzuVxkIvHc/PdilJAgMBAAGgADANBgkq
hkiG9w0BAQsFAAOCAQEABmg/JsxT+30MUKeZHulca5w5188rUgLkh4WBPSA8YjlF
zFpR0WhTGGwI/oV8A25KrQl0oi0BbcF982d5JIrMvx3Uuj+eaTcV+TsbI75R1Ojk
7M+snVU7cwMsdSELiRck7JrXZUiLfTw871wH9iXLTQbrkkw/bjPWWrZ3UbYYrzY+
lZfy85dIOrr4cNy57wSn5mHEc+8LxC313a1P7LU6yt1WURrArAUUGYugvuQgScU2
Tljx+uiio3sc1gdWzo3H2JkcUDypbvS0cYH0994nUFAM3qFf8Q77AFLnpNnUBaZq
kVCkt4f3Cck8nNv7psnZA6np9t3cNhE/r4G6bi3FFw==
-----END CERTIFICATE REQUEST-----
`)

func adapterRlpCsrBytes() ([]byte, error) {
	return _adapterRlpCsr, nil
}

func adapterRlpCsr() (*asset, error) {
	bytes, err := adapterRlpCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.csr", size: 895, mode: os.FileMode(292), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterRlpKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAqaK6Jl0o83VgOvcwMjqDloBexVXJkj/v7UZJtUDktNKCPhoL
JeZ1p34qxMdwQONov9dInpsCgAx/iqMiOVQYR6lnScISsqq7+6CwA39/E30wdjyW
ZvqJl2xQtbqr+DRaZ5HjTNlxajNPv0zs93BVeUnJPC9257NankXNINAL93aTwrtB
Uf3WmrGuoEJzPrWVsgpzkHqTnahT/qzcJojtp3e2+l4jlbFYgoFtcFruC9qKAJK2
TlzIGL/HFWXKovGmyXtzv6KpUyAeya5QbjR6GE+nWjHx6SfodhV5lj22hUEinDYI
KyK9J1mFsSPAuGhYLJTV/wM7lcZCLx3Pz3YpSQIDAQABAoIBAQCKVjciNBTCPfVF
APJf89H9uSAQI36nctaxlAFl+87HG2i1Rj3TIZbPCZfNM6t6bzmsQN9q4JRwYkDc
iV7Oi6LlReQChW8EHzH/6THBGIdEGHKd6Zjpz+THBMDpAptdZSxYi+Nmd2kDJ2cg
ZZZVz1kU+TRPjZGVMHF04w1+dctceRXZsBpp4tL69rsBOO1J+5JUD+ZhXB6uJjaB
B8w/5W4WkP6dTky+nX2tetfvaiAfhNBeO1X9IWeCKZVezmdV4uEW7ndEXLPqFMrE
fXY2F2TdCNhYhWBLlqv0KZGTN+dnYkUfOdscCWmXPOBFVC+kV5iVM/BlIW0pE7kE
DdCQeT8BAoGBANVT4GZfIJuuhqXYqKdSQhm5dfzw7AAazJFKUpaRW+xujVR3u+RS
olcorL1Tl0B0H7ytpid/0UJte4/wt/RJgsVBnBqKQiBLdjNKXi/MkKONOR5EBse3
aSn3PXwrOc059jEd4zjGowV88Npx5DSfKnv57VT/JYvLTVWLvMW6cL/hAoGBAMuR
dnFPi1AOkPcMJUS8mZd+9iNqWjKb1+uw7SU1cenSxhmTpe4sRYcye8ZGOd9yy2Zb
xcW7Lpum+p/hAKykRUaBFlJvsfQxNCs1FiVzxyUot8En/4semsJfEb+nAeMPnHxB
rEfHiKl/pErEOG3z6YmxC3aDjrfDiEGx3V/efjZpAoGAcvMZbdBAj+MBJwiSCGco
uxfWXg+r+3p1VKzJx9xXvhTsDuHd2vA0Deca/YG3dMGeAFtJtusG5VZ9SFibpwSd
dJEf/qUVcLV44bZm/jaqkZadepOJW8CW6EgTV38rTEy5Pkouj/9pBKIIXo0UPM6v
Y9KOckhyANvxtfDwLVODQcECgYAShzndlFzcu4asRbm6qOPd6xtiG9L72j1r4V2k
TloA60NGnq6yn+rwJEMpx8iKsvsaZO36UlAqsKcNGECkdgssIKG0fSAYVsYlzJ4o
aIJOuocHGKnksrNpT5fg9sVwMkKO+LdCjUG+E7UTbQqpz1KJSsj9T3oU9cIYIKVC
jZC1SQKBgHR2rol8d5crGIXfX2QrZaDc1aqb+3CU81X22CUCyFszL645n5cz//Eo
b1/KdUMCGcRTH/RcSrscgTmS7qOCH0voUHplzuqio0DbI4iDrMFgq7+A0fw3ak7B
fVR9HtHRmhLDybSfSglQ7JYt3pfaGEZ5g7vSmRYa7n3qFRbCmxih
-----END RSA PRIVATE KEY-----
`)

func adapterRlpKeyBytes() ([]byte, error) {
	return _adapterRlpKey, nil
}

func adapterRlpKey() (*asset, error) {
	bytes, err := adapterRlpKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter-rlp.key", size: 1675, mode: os.FileMode(288), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEKjCCAhKgAwIBAgIQdP8htBoXrmqW/0G2CPfPfDANBgkqhkiG9w0BAQsFADAd
MRswGQYDVQQDExJzY2FsYWJsZS1zeXNsb2ctY2EwHhcNMTcwMzE0MTUzOTM5WhcN
MTkwMzE0MTUzOTM5WjASMRAwDgYDVQQDEwdhZGFwdGVyMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEA3Mq1+7pFwH0PuumtvvkN4h2G2pW4xwtngL157N13
TdAj7WPxDNNtKDjGNp6ApvJ2YGOtySJATOLmCppzQWleMzvqaWj7YxhAwIkotLKp
HgfI+KqpmY3CibEm3ePHnxgJLykAYLN1Xe2Nsz4kPfHR2cnb8S1BWwfbHnvzvbhM
g3lfy3ZIhoKFsmXa7+oVNnBfg6Qpj/5vpo64jGb6qW5e9Qsyd3Y8380fsjaFWij6
twLGLScZLrz+mhyKBHbNAtM1+xnIqTC58INYYRE2LHVx6sKG/L2M2A1al/zfO5FN
4zQBbVis2OG8vvl3IM1icFYUxdbXxbZSGuO5V+SoUqm3fQIDAQABo3EwbzAOBgNV
HQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0GA1Ud
DgQWBBREmc/fxe7eOM6oKfUoXvEpHfMUUTAfBgNVHSMEGDAWgBRsfq/vSDBf/aeH
sjFPhgmAuHHnqzANBgkqhkiG9w0BAQsFAAOCAgEATEvEkkHYMExxk2ki2hRL7MS4
1gRRtpJB4IscW6YGAEUXk1DnZyBNqzwvBKqDINAF4oG2o7WdJfKU3cVubTe70TZB
i/eOWK1FA3LJKZ+wzgQ2mjsrLM+kS2py22AkZ43arcRimGTFH2EKkbHTP30kWsut
Bs1GWoRCGI5RZueZJTmHVDjbhFe/aueJyls1aw/2mPHw8/9kENQupnULuq5IoUWh
Jkt+qckstvcgnTLncEAr/6ZTG2Anv/ijvujQn0RQzuG1/nJnX1/jPjEm82G1xk4C
rv0T5LHdzyiQoUXrx8DoSUN5qYsyxadvZyBkHfGjNm9rHsysLRZwCoNv7PcdqTOQ
5tOAs/h9RAiHzU4z6OiDVIDNT1e57ooYhfgjOAqAgbwCBc1gjrfcM/ETKQDSh60U
4td7PQrVAi9r2KTNQF1fZ7pPMYVYKWQikJmAqvHtzXe/Lctl9Ip6Zv4wSNO3LsWi
brMmTX7xFsJhkRnXUANFFOsXrT0SlfOBV63swImmf6aSLAwliA/xov1TeTpn3NhT
rbjVj7gGQ9HF6NdZtoC+4dN0nAWwnWEWmqemp3CeBH0urDxO4pJ3CRYajfhEU+oO
sZwuiokFO/rR4vvfn8/PRMCJu48IR+t1CcSNDp2RBgH/UspKwX7qBn0OcfSErf0j
zafhFAwwT4El+Dvlvhk=
-----END CERTIFICATE-----
`)

func adapterCrtBytes() ([]byte, error) {
	return _adapterCrt, nil
}

func adapterCrt() (*asset, error) {
	bytes, err := adapterCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.crt", size: 1505, mode: os.FileMode(292), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICVzCCAT8CAQAwEjEQMA4GA1UEAxMHYWRhcHRlcjCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBANzKtfu6RcB9D7rprb75DeIdhtqVuMcLZ4C9eezdd03Q
I+1j8QzTbSg4xjaegKbydmBjrckiQEzi5gqac0FpXjM76mlo+2MYQMCJKLSyqR4H
yPiqqZmNwomxJt3jx58YCS8pAGCzdV3tjbM+JD3x0dnJ2/EtQVsH2x578724TIN5
X8t2SIaChbJl2u/qFTZwX4OkKY/+b6aOuIxm+qluXvULMnd2PN/NH7I2hVoo+rcC
xi0nGS68/pocigR2zQLTNfsZyKkwufCDWGERNix1cerChvy9jNgNWpf83zuRTeM0
AW1YrNjhvL75dyDNYnBWFMXW18W2UhrjuVfkqFKpt30CAwEAAaAAMA0GCSqGSIb3
DQEBCwUAA4IBAQDPPAhx2yVejZsW602YYNrsZqU10DlPXcBzLaguo18HXUmoqvQ5
8qze9P8StRrWmFGUxq7bh5XiXmWnEtyhGebJdhFC+PQdBsfLA5OHB3erjjvt06GS
bE3bwerExW/0Fc27JkPz087WQZf7b1gcNbcfuRS1NmiZ4arM4eqeqKFcZWuKkLH9
RErizHLP4rUXvdAuSlSNflzIthgK/OsLQ3SCoSTeQjrxUHLhAd5g1V6N00DTtcN+
6sN7t31aYKKBujvMI6nfTYhCn2qAoV8qT/IyoACw6GYVSfVQwEuzUon4K1MBTz9Q
ilMRANvmVQVJM97jZH8Vvzg6DA3cOc5gXprs
-----END CERTIFICATE REQUEST-----
`)

func adapterCsrBytes() ([]byte, error) {
	return _adapterCsr, nil
}

func adapterCsr() (*asset, error) {
	bytes, err := adapterCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.csr", size: 887, mode: os.FileMode(292), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _adapterKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA3Mq1+7pFwH0PuumtvvkN4h2G2pW4xwtngL157N13TdAj7WPx
DNNtKDjGNp6ApvJ2YGOtySJATOLmCppzQWleMzvqaWj7YxhAwIkotLKpHgfI+Kqp
mY3CibEm3ePHnxgJLykAYLN1Xe2Nsz4kPfHR2cnb8S1BWwfbHnvzvbhMg3lfy3ZI
hoKFsmXa7+oVNnBfg6Qpj/5vpo64jGb6qW5e9Qsyd3Y8380fsjaFWij6twLGLScZ
Lrz+mhyKBHbNAtM1+xnIqTC58INYYRE2LHVx6sKG/L2M2A1al/zfO5FN4zQBbVis
2OG8vvl3IM1icFYUxdbXxbZSGuO5V+SoUqm3fQIDAQABAoIBAQCdKKla0h8+QYbF
2/mxeuPX9H597p7FB6gX6kb0RDvcpnA8VKxLHd+QBsGINVCMBQAf4jPcfEXatJNc
Ls4lXFQSEe7sMy7lPWkx4y+XV6irWI1D+26Xf2Fe0ztALBd2dgxrhjrfmj3LqwD2
+h+f/BYMePPWewkPO8tLqp03iQzlc1epdVvh0rUkzCX7IIPEsEmgHHMlZahdtvIq
KB3O5/229cXyamNSQFnxz/vvu2TBMg4fnZLxUXnmGMz8cS7j54esNdqXpHQIbB1c
dBP0m57/3a8Y7sqZv6C5Z5Z1Mc3SHP18XFsxQQL0dgp7vWzbPkqkkvG2dcr+JinD
z2LSHVrdAoGBAOB3xslTqpybZ3Z1QtIjrsT+T+WK5LsmnRjQHQRJ25klVJmGESYc
AzErZpSyPLv4ok9F0WiVj7sEOEX0SAb9fSSwaaSHRzo1Y+AohXLlA4+7bKGxoQ3b
ThP8a5IXk69OT6TZa1U/Clk2zZ4PjKz0M/Xz6R4awLEZkEfWynPCnlkzAoGBAPvO
vPkXqiR7PjuypICRfxs2fFM+cByVreTxBQIsBallVznBk/H0ZV3sIj3qJc8yEOUt
WYGbYtcSf8XhjrhiGXqqDVBfUJPy2yt0XEe6iYK42xh2s5JwRPjn5quQkhpBQ73d
DYUCUoMB3lro5WOIMzthFd3sZgyhz2FQwnO62oyPAoGAY4ybS6RgcQ32x7FfjiSn
GNSUiH+dy2Znm56Ij+NVkcjdiSzNJDKeM8tEtkOJ7e9pxHB5W8Ggudc4QcYBv5/i
RUg7we0A6M7O2ZX/ASKR/seneNp3S9br/K8g4ey04bWAWuLV2DuaElDcxfGtePLg
rH6c72378U8eDs4ygT5ZzcMCgYEAjJ8Uq2rKyprE02PdOCuItzLDVV2eEGiKdzse
F+trsgD1KDzxmQJqBXyUVs1HFiGYi9O6k4WqOf+LuX9QS6oFHpqO2t6Pyj+qo+bU
jf4fQxBm0o+fktz9t58SE6el3+GoqgQjw67bU2wct9ouGFp8eeGq64dUKiPHA0qt
fSHRYQMCgYBdsVGUYcrBFV6Qw9e6Ytcd4qkcB0jdXHR+3gFesa/9ZbTm5iU13WiO
x3601/4lQmkA0A7dwFTvxtvjHWZNXigC+hhVwQWEKnBCCFUU2vDUiljztegMw5u+
JuLlADSyY1qbx0fkzPq4gBf4Kl3h+GEcyiGFE6fN+qf7yUAmqtJbAw==
-----END RSA PRIVATE KEY-----
`)

func adapterKeyBytes() ([]byte, error) {
	return _adapterKey, nil
}

func adapterKey() (*asset, error) {
	bytes, err := adapterKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adapter.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fakeLogProviderCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIEMDCCAhigAwIBAgIQGUITcbNk6Z2+B5WtaSCggDANBgkqhkiG9w0BAQsFADAZ
MRcwFQYDVQQDEw5sb2dncmVnYXRvci1jYTAeFw0xNzAzMTQxNTM5NDBaFw0xOTAz
MTQxNTM5NDBaMBwxGjAYBgNVBAMTEWZha2UtbG9nLXByb3ZpZGVyMIIBIjANBgkq
hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxLPRP0DcjBtSmStwJf1/EouCHceWnAmU
u+iaCPYED03LT6L3MdHzwDORlCXlqWtN+Edr9fnAS+EMKmuZpAzbrReumaIo4u2t
u9gg7i9NrWh3VE8ikY3//pmLV3iJqwANHUbAs6hGbIpoXrVLPfeX49rAI5DaHHNX
hk0py4Ltc/xwReijqX4USabbO+NzubVeXUK1jFsELie1IxOrqgjMGlFVL5DByeYe
v5pSASFIMnq4To7e3IzZu2NSSPUvX1t1M+qxz6eWlmAjScnJ027+rbtoDmewzwAt
wmJA7f5RB05pNZIKrcInEYiyoOy2GR+MGdxsZbNSxTvojNDK1Pc4ZQIDAQABo3Ew
bzAOBgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
MB0GA1UdDgQWBBQdkkcU5EAapLNdyDbPqDw9jQN+NzAfBgNVHSMEGDAWgBRyxNuH
r10PLsF5sGGcWxKgNFMMcjANBgkqhkiG9w0BAQsFAAOCAgEAT2CzWHFez1A6yM/E
YB3CJg3zOtgq1ig6glsQeCej+vB2yre326sPEDOQkfhZYt3oIcUfOQG6CU1x3dSL
Kj8//lHPl+aC3dfJD0vbmKLs+D7u1JDAFEJVA9IETZrfOWv3KniIKquLvbrJEoEI
a9AIbk9D/Y411/n5gu+q9BVKLhzZQrpnxCEwvRFoMDdANoNbdw2nkDmVtncYEq85
EZURg7PtCb3Wh8/kCim5iBea4MbZ7w3ucIp0ZrP3jfa+PCYUOnJNuYEw5nczUbGz
joq+KDQWvqH7cVJPyzxb2rrlXjlK7SyFKxQaS696lg2Hl6wJP9OVpq2+mUOKCTVL
D+ccY4pThgp1xldw1bQguEQEAj9u8EjTlsLg1vdHL2dgQVQofCl3o4PnKoR1Yx4V
CgzEfyStPJpo71QoNMrvfjKtZkEsoANWkrOAjAO2ENCdGvNIJJH+p9+bg3EmTUTC
KUC64p/e67ObgdAkQjFtrNpwCeMuOkoKHXtAOQnSSi6ETABGaMCQRbYfC3RjVU2N
kbKIul7cysiMVBVV/ChHKfkuHR9T/oJryxUwF5R8Lp23M1SL1cXFxRVjVQlTk8QG
aZVhrCu5/tLXeKcoGifAbucT0F/WGT5MrOBj2Wf4A9PF92JYfsG1ccMs3yX4wGgp
mbSTi/47MPE6HFS7Wj3LijTB/hE=
-----END CERTIFICATE-----
`)

func fakeLogProviderCrtBytes() ([]byte, error) {
	return _fakeLogProviderCrt, nil
}

func fakeLogProviderCrt() (*asset, error) {
	bytes, err := fakeLogProviderCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fake-log-provider.crt", size: 1513, mode: os.FileMode(292), modTime: time.Unix(1489505980, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fakeLogProviderCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICYTCCAUkCAQAwHDEaMBgGA1UEAxMRZmFrZS1sb2ctcHJvdmlkZXIwggEiMA0G
CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDEs9E/QNyMG1KZK3Al/X8Si4Idx5ac
CZS76JoI9gQPTctPovcx0fPAM5GUJeWpa034R2v1+cBL4Qwqa5mkDNutF66Zoiji
7a272CDuL02taHdUTyKRjf/+mYtXeImrAA0dRsCzqEZsimhetUs995fj2sAjkNoc
c1eGTSnLgu1z/HBF6KOpfhRJpts743O5tV5dQrWMWwQuJ7UjE6uqCMwaUVUvkMHJ
5h6/mlIBIUgyerhOjt7cjNm7Y1JI9S9fW3Uz6rHPp5aWYCNJycnTbv6tu2gOZ7DP
AC3CYkDt/lEHTmk1kgqtwicRiLKg7LYZH4wZ3Gxls1LFO+iM0MrU9zhlAgMBAAGg
ADANBgkqhkiG9w0BAQsFAAOCAQEAv8NGBvUcko7YzusJY2Hkusw5p1Akfy93hzjU
btcPn1tCKwwOxk0Xp5/0WSFiw2N1hAm/iNWwTLmEriZ41yAOnViVlI40BKqsxMsp
FszWUKjs/GQjRdBADmYLhYosWv5G8UlHOstl7XzlcidElDhRabiNBRzhJQkpZu1i
67+m32I0biHqiRzISww5dFtLJTExTiFdVa/ztajcBIo1dZDr14+gRkYbQN+fcjE0
7GTG2g1fu0zDZkCuJoIIeSJFPYxzoSpu5TWf2MYnDQ7EyaiX1XJIdmsQeQlCwozr
7m5x0X4Ywpqf37bU4UilI18pz84XB0I3dD67Cp6x8YBJFv64Dg==
-----END CERTIFICATE REQUEST-----
`)

func fakeLogProviderCsrBytes() ([]byte, error) {
	return _fakeLogProviderCsr, nil
}

func fakeLogProviderCsr() (*asset, error) {
	bytes, err := fakeLogProviderCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fake-log-provider.csr", size: 903, mode: os.FileMode(292), modTime: time.Unix(1489505980, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fakeLogProviderKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAxLPRP0DcjBtSmStwJf1/EouCHceWnAmUu+iaCPYED03LT6L3
MdHzwDORlCXlqWtN+Edr9fnAS+EMKmuZpAzbrReumaIo4u2tu9gg7i9NrWh3VE8i
kY3//pmLV3iJqwANHUbAs6hGbIpoXrVLPfeX49rAI5DaHHNXhk0py4Ltc/xwReij
qX4USabbO+NzubVeXUK1jFsELie1IxOrqgjMGlFVL5DByeYev5pSASFIMnq4To7e
3IzZu2NSSPUvX1t1M+qxz6eWlmAjScnJ027+rbtoDmewzwAtwmJA7f5RB05pNZIK
rcInEYiyoOy2GR+MGdxsZbNSxTvojNDK1Pc4ZQIDAQABAoIBAHDU2O2YriosLhgw
g5c3LyIbJlsgtvLwyAF17o2/WRrSPBKFX5iTX2fb7OD3UCL7q3EEvxgM2FJuWEUp
Dau9uHE0yXHVQ/DP971tv44BUmRrLTAOaLznoHWR7A0T1pxhXiRyBm3H1AXE6xOQ
mQWFtfn87AQ6vfJd81HVh2j2xHCn1uP4gKXUKCYdtmYHJKGerxR59QMe/z2f/n3e
YRHVl1BhoLqG62WDgHSq1wjbBVaJrRu9in9Z1VPGmI+boxJmVo8nx9KC66ynmNwu
fYFaZ22nEZQkbm1TBv+6zbir84zKprN0ehCADv5M91uIBNA+MBhW3Vkk37FOmbOu
c6P4RS0CgYEA419EjPr/GCzFAg3sT/codpW8AyEmM5jEtDaLir5D4QU1LQLHGe9b
j/5d0vlGBGesEM3FaWKnjsSLwbHCxWRrV8FMEQliZwNwAOSVS8ZovdVKL/YI5q/j
SjkvPBckIkoBiHU9TBfFBDSpHT7xvQ8QH1XhJMWE2+Arhw3EP8ld588CgYEA3Xf+
NjjmOKEkhrVFoarl3RLGIi4p1AEvFcbD/mhWA2MB54yR1GL9TXfkmrwlH1Jxvn1z
2f771dvv6FATAmx2Alkn0yT5wK38D8PpvltPbQUm4csevVyWo33bBRaGo4IrbMlv
OyFNa4xELE+vzdtRY44d0jRjVHFgok9RdnTbtYsCgYEAkPNHDGlm/s5rueeOY1w5
m3/RoF0dsX8Ox6SOSSEKvQVI5S0EKPCC+sU6oyjvDhfZhczosUqHb2i1gAIHHTfr
hsJf7+x/oxR57tfKpcgTNhInfXPoMMioqcTS7AgErSdo2smDDmOI4imANnjOO6zC
pndlVL/m9xVuKmcIWXHSP9kCgYEAvUjKR/OXqPzpKA0UZ1mWPr3GA/6ql10vrhAF
AZKROTHMtedp2DmGv0hiZXG61Kt1NdcpRj9tZFonEMonhSHINreWlxr6LxlE3wCV
7bFDEC2gDsm5CyVwRmnR4OZgyqz9imwbmlEbR3lJ5wlwe6QgStNzX26RGuIQMolS
WckE44MCgYBTXVTWzMFVRfK8lyz2Zyel16+GcD+szC22hp9Lyo/jyqmpSgUAxru9
F1kU8Zirt2dHNG7kh0TPlR+EbGLLV2jlifQG6zWSXBbhYqtJ1AEsXWDKLspy+dRJ
BpnlmGgJL8rPPIdXclA7uaOzgG3qOG7+HMyypyb2LTXmDF/jNQ4uGg==
-----END RSA PRIVATE KEY-----
`)

func fakeLogProviderKeyBytes() ([]byte, error) {
	return _fakeLogProviderKey, nil
}

func fakeLogProviderKey() (*asset, error) {
	bytes, err := fakeLogProviderKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "fake-log-provider.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1489505980, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrl = []byte(`-----BEGIN X509 CRL-----
MIICiDByAgEBMA0GCSqGSIb3DQEBCwUAMBkxFzAVBgNVBAMTDmxvZ2dyZWdhdG9y
LWNhFw0xNzAzMTQxNTM5MzhaFw0yNzAzMTQxNTM5MzhaMACgIzAhMB8GA1UdIwQY
MBaAFHLE24evXQ8uwXmwYZxbEqA0UwxyMA0GCSqGSIb3DQEBCwUAA4ICAQCCiuKr
LTCjjM6Kcse+9Aha1V2W/7fenOt+1o/eeHaoEv0wZHB3ruVMp5IQEmc1KmFzJis5
Aj/5WgiTyjBWInI2IFy7pbWFGz7KJXvawtbisxRsPSGesFqM9Dqa4kL+q+eY1LQz
zQfyspAgaWj3ICSGvMNSnNSnAWxxD1VQSDOw68qG/ZAA+LrQu3riPWASOTgukW6y
ic/Imf3XUcONf2DAEN/PtuMc7HfjyPVV63t85xtZtBLGaeQe2ydqmxxOahKMlGp6
kgz7tpeyjLr4R6vCNzaqa6VgYPW1/wYk0c/XtvmLvVXu8r2+NHKEHXNMNR9XSagJ
I1R8wjFFSktgRM4g2dUa2t3+pFtvjafxJNcLNJf6Ocs0uC0tFLYxlTLyguJ4X4cN
qHz+9Y8zFy5xxvpOLDDwUWliAMYMtxSP1pMtpA1hhSjzFL8aB0DdOYT9bjcAKnmE
nc6UX47uImaE25nvC6MoRUNSTdIf4MFRfht5Erk7YpKXzLOFm8tFCpDZZ8myPwA2
2PjaSIZaaX9MHlDP5LuigPZwjEMj4b6IRoI4lq5D6cIdu0rx+N6p1TANcB5pMXiM
BVkArDChXX87j5Bux7emY8NzOOl3kr4gQt8P04VDNUTiqKweyl6AHRwE9xBRQPSZ
/nHieQSQlSK/8c1/zR2sTC0RFMns+ngcG56c/g==
-----END X509 CRL-----
`)

func loggregatorCaCrlBytes() ([]byte, error) {
	return _loggregatorCaCrl, nil
}

func loggregatorCaCrl() (*asset, error) {
	bytes, err := loggregatorCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crl", size: 934, mode: os.FileMode(292), modTime: time.Unix(1489505978, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE8jCCAtqgAwIBAgIBATANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDEw5sb2dn
cmVnYXRvci1jYTAeFw0xNzAzMTQxNTM5MzdaFw0yNzAzMTQxNTM5MzhaMBkxFzAV
BgNVBAMTDmxvZ2dyZWdhdG9yLWNhMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC
CgKCAgEA46GIQDUySrGQ7/hJ0TcCkfDDBdtjThY6I1y9chS67Bicy0JkQGWciMgI
v/9CFTKcEsFQHaufoipDSNGusSJt7B6SZRQlmKKU902npnyXNyIVtQK1ZnIuDCsU
bv4zJPvRhBhgwSpd369VG07NSs4tvYO5ju7049AZukRuclxW+if6oQCSmdYYmcGd
r12FPsgOIaPWQba5AI03Pi6L4TFX4jS2AaOSMvvxS6GVORer7npdorF4yEBNlxqK
PMUbMK20TcZPripXT4C17UC6tiCByRk2QiEXD54lCcgGPNANNF9S/TFrMmX/NemH
UwLTsEjb6O1/6fIC2YrpicVOU8DGWjgXbaUTIusvYtF1uYqcP4bDfwOT2EsWhmXq
hbfmrMq0LEQf/X0LyoIkZFeQPh8O9TOQfZjF8Yv720UZFcZfBF2fmp3x/C/0DbaA
tVXExDFaYwGIF/pQ4p7a0o5GGPBnrfFJuiWMB+gphym1ikDOt20j2cLfYaXipb1U
LTFG+Jo4eQC+/58HcBhhm+nvYPt4pf0AuQ3phcTvL9mOBoPZHTDOgAPiY8GOltJj
+7kTcSb19/FxpTSAv9HXa4GTmC375qu/o5DOmUut+l3OUn7LtrQHuTuPOwa4nTDd
DF9WDX6V4Ll2DlRcSHVH4JnKFF6hpSWGs9RJDqHhtePiqYpDGzcCAwEAAaNFMEMw
DgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFHLE
24evXQ8uwXmwYZxbEqA0UwxyMA0GCSqGSIb3DQEBCwUAA4ICAQBwzVeTVcNPC334
ubfze4WzQfLFaHXnndRp4w5YIUvMo4nFyYsM6RssWGTPrIPv50RUqxgifXfrEKM+
c+pXS/gT2fQ5WyelwsGcYIjkE+Mntxso+M21/aLx8YqWbx9Fm6EGMCwVsFKI1geS
ydbHc8gL0SQlgUM79ACrD4DJ4BWfVmPbVPmbWphXLYXA0edGIdBa0Q7dksMUXGOD
P7oWqS058tXhhTQpFbPgJa6A15OhXC/ylBfpVW0GWgBYT2x+x8V2COiIoVpKrQK0
scNX+ivSpzKBWWRFxqc2EhVou/Q/LsohaaxWRfeSjNaBEI+re1kelLCHf8FzrBfe
BS155jwLHtpr/yZVyS8BUVchcz3eV0tEewbzzRqFc+L0imBtN9q0UCj8nasffteH
NHUBr32YMBrdKwhXz6R/hMRRXIXaz+59/ra9+MdHuzSF/bJ8RxQDIxH4Nj/qMBM5
yKavdFnNo2gRT/Vr1nwmr2QQtQ1uxh+/vKRGl4BU//tlVQvZJMZb5IxCre3pCefY
x6kib6WgZBHpOmTRU3tPumMmEA7WzA0NFUFOzcgEKHhtQB+9ajQnfAx9pB+SEDHr
D8VXpC9+CrLDDv9V4SODz1vWiJr5JqkXajyCHaPVg7KedBAhcH57d/uc59SfhGEU
O6T1R9yIqKc9hqxc756LyTX9VAD8Yw==
-----END CERTIFICATE-----
`)

func loggregatorCaCrtBytes() ([]byte, error) {
	return _loggregatorCaCrt, nil
}

func loggregatorCaCrt() (*asset, error) {
	bytes, err := loggregatorCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.crt", size: 1777, mode: os.FileMode(292), modTime: time.Unix(1489505978, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loggregatorCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func loggregatorCaKeyBytes() ([]byte, error) {
	return _loggregatorCaKey, nil
}

func loggregatorCaKey() (*asset, error) {
	bytes, err := loggregatorCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "loggregator-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1489505978, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaCrl = []byte(`-----BEGIN X509 CRL-----
MIICjDB2AgEBMA0GCSqGSIb3DQEBCwUAMB0xGzAZBgNVBAMTEnNjYWxhYmxlLXN5
c2xvZy1jYRcNMTcwMzE0MTUzOTM3WhcNMjcwMzE0MTUzOTM3WjAAoCMwITAfBgNV
HSMEGDAWgBRsfq/vSDBf/aeHsjFPhgmAuHHnqzANBgkqhkiG9w0BAQsFAAOCAgEA
l/+Jkwqs2FnuuEz7oel4Q1kMQPeK5qa5+EMTrf7gp2WOvjtaNH9fdsnRTT1yTdcj
r/8ehPBz//7Nqzx1Dw029DrzxHqcqmupGxs4PUBz5++1QM8gFebaXwTzySG1WmOz
aAgeThA35orXwaJjkpxSE+A0mXR69SlALE3ghlQ50o1Z1VRBPy9Rf/fNlUUcleCb
iTWS6vBql0Ce2q9cRNTheOOKiBR+SLiovYIQBxyQalO1nPWwQ+FNnmaSCNDi2fhP
NTzq9f+1GAuIBSG8vNsI7Ud0Fo6dtmCHd6VWAhMKiF+r+rGbEgCSrfKUH2iOBGcP
JVW2FZHALDFkGYQjYlk+inkCFfd1YRlcRSsZ0miIDSiXE+WYuOHE5RLKKtyg1NBq
meL8Pn3rFkIXjmGgptlP3AFa5KIb/MYYBcB3vgppwqhOhF+SKNCwZMky/M1W0z9H
X0S8H8iEY7tsESbEBIU1IWOzgpZ7o7Pu1BMmLauQQKVGVE0ukwjXBwn5ZzcuBEKx
+O8zHOlkR/x7EnVwlKZiACpHgzQ+RFkXGyrJ5dVfDI8UMTSZpIOXyjikQjGFb04o
v5gwmJFb29DqWPouYIsz5I2nDMnYTQTqi7PxFHeRo9Z9y3G3SwPFNf0e/kQVmZcN
j0y5AZms4gAxJL6nmmjmRWba6cB/GN27lNKRhkqqeq8=
-----END X509 CRL-----
`)

func scalableSyslogCaCrlBytes() ([]byte, error) {
	return _scalableSyslogCaCrl, nil
}

func scalableSyslogCaCrl() (*asset, error) {
	bytes, err := scalableSyslogCaCrlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.crl", size: 938, mode: os.FileMode(292), modTime: time.Unix(1489505977, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIE+jCCAuKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAdMRswGQYDVQQDExJzY2Fs
YWJsZS1zeXNsb2ctY2EwHhcNMTcwMzE0MTUzOTM2WhcNMjcwMzE0MTUzOTM3WjAd
MRswGQYDVQQDExJzY2FsYWJsZS1zeXNsb2ctY2EwggIiMA0GCSqGSIb3DQEBAQUA
A4ICDwAwggIKAoICAQDYlUBNtLcJh+doRMqa9qVCxbgK57njCH1wsxaj+W4t141j
nA8W3O13tkuXlWb3Qosv0/zUHyqap69etbHmmvGkf259+KBLHjtZsTvcj7gWlteQ
n9Y+rJG0jPagSr/DUqittmGxTEbuhjePsClQk9QppljE77S4WfltVhWwP/SkT8NS
FGh59a99LFjjTyREKnmlWGmNBtkZ5TS/eMqGkvsSTffPM/rs0COX/B0vL2lTbyy6
2yf25Hg3YNrGHXqudq3wMACQZvrEQX7viKiAkpv5dMICKZHOb7LpsNZpMymA/0Np
/hLVHxPtXfs95vDtv7ouvdNudqTxD/QsbIlFmhbl0YYnQN3ViXbMYweGB4/YDtX0
TtRAWBGYCBleR6PKXajOxgjoPRbDOLk78dEYDz4D6HyyCRNSymThnceC6tP9+zbH
RZo9SHF1CgrzXEwzbtHV22y8LTkFmRaxyQbZZw2x7/nGXaT4708ieRVC6opQ4GR8
iNDzBIKun8mn22n/y0LxKY0GTEt+Dd88/0bOGJyx0+INcdX4CJJFEowv3Lz9wntY
trFxGFF+S97Lq4r2+4kat0DqvbJFupyZRQNxTEPjr28y5l4Vwu1gn2IPdKgkSpsB
U3dZIMgTtJ+3PI8OlCMkeGQGG/12f/pA22QowCWOs0wSqVCskbtBkg7xRGigJQID
AQABo0UwQzAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNV
HQ4EFgQUbH6v70gwX/2nh7IxT4YJgLhx56swDQYJKoZIhvcNAQELBQADggIBALtv
NXJic9j3Tqsz0F5j42HLshmLz5ufXEr223jRr826q8jPEtniev4YtGPBdjfYx5+G
eYIFk5PqjwiAbkNXOqEwvNKOaUTEf9YoY6/ul2HCvLAk6Vh6Uu6A/X7hsTmKVut2
syZ8rQC52KmTjPG5jzJFwjbP8N149SibEGtHdNxiffYvdPt9GDXf11Z4z/oewYZl
NocAsKnwbq22B/fXk1S/owxZWU9s/SgrBnhCI+3+0syVtYGZUW1PdOw2oLy6veNP
AF5h45jnXXw/uhmDz9k4JfIfemGgYimoW8WnHOXI5k9ihrATLm06/8CwHhpGf/q0
fRiBHzY4T/+VYNt+Zdi+lnBeZBSC8dowdzli0a4Uz20xsSjK174U9f6cXF85lxQu
KiZs9a+A8GU6Si3+52rOdM9RoAvunrcCzk+1P5NL16+locH7xQ+9TXvWgLpVzALZ
qhBjL4Fe59oUzyER3LEf0nMoj4c+vdHQDthlnJH2Gmr4a2TReHnCgRk0FdSvrE5L
fHkdjJGx6ZscUSvf+YdMm+hou+QyJs6pujnCtHi+kGcayjcUJ82ZJPEX2hmOT7Ix
CJ0ZJCPZt/rARSGVLChged0DssjBvHugvu2EJl1PWDI+rNnpbsB/OzOfo0Gj89gT
QO0g8+/yzHEpMu2EO21tl4sWE9tY94/aSJeK5QsY
-----END CERTIFICATE-----
`)

func scalableSyslogCaCrtBytes() ([]byte, error) {
	return _scalableSyslogCaCrt, nil
}

func scalableSyslogCaCrt() (*asset, error) {
	bytes, err := scalableSyslogCaCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.crt", size: 1785, mode: os.FileMode(292), modTime: time.Unix(1489505977, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _scalableSyslogCaKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
`)

func scalableSyslogCaKeyBytes() ([]byte, error) {
	return _scalableSyslogCaKey, nil
}

func scalableSyslogCaKey() (*asset, error) {
	bytes, err := scalableSyslogCaKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scalable-syslog-ca.key", size: 3243, mode: os.FileMode(288), modTime: time.Unix(1489505977, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerCrt = []byte(`-----BEGIN CERTIFICATE-----
MIIELTCCAhWgAwIBAgIRANnJ2aOjovYMjRjF4vBWi/swDQYJKoZIhvcNAQELBQAw
HTEbMBkGA1UEAxMSc2NhbGFibGUtc3lzbG9nLWNhMB4XDTE3MDMxNDE1MzkzOVoX
DTE5MDMxNDE1MzkzOVowFDESMBAGA1UEAxMJc2NoZWR1bGVyMIIBIjANBgkqhkiG
9w0BAQEFAAOCAQ8AMIIBCgKCAQEApfUo1wqIEJksT+spXwV8Epybqevqcfp7dVLJ
eiqHkwoX1oxSJ7crENykgliL40jfod8koV0c2Bu05zDcXcef1dBdaVQ/npjs7zG1
pO1UAl3uHvEBO8KlJYAR3zRZu1CSi0z3vNq5DKKoo4h1tLyTiKQlli/Vk1son+WL
PJL2VeAGcwyplvqSr2SFLs7Oa12QDoTlwY4CPonAMbcCqdgGFykrHikkmP4+Pm8+
D06fezdv9Dn5j8z4uoq3VG/lOnloby99C4iWawsaEThj0CSpgU+1xTp0z9NbzTGB
nys2XZwiEosN8+lTmS7j0K1wwArtqwBlWjw08hKnel+dqJUyJwIDAQABo3EwbzAO
BgNVHQ8BAf8EBAMCA7gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMB0G
A1UdDgQWBBS4HVy18HRhArsGUZTt9RiYPYSTtDAfBgNVHSMEGDAWgBRsfq/vSDBf
/aeHsjFPhgmAuHHnqzANBgkqhkiG9w0BAQsFAAOCAgEAWsjuuU5OeUhKZVaiQ0cb
W3hYtYOjoevx7m68e4ej4hxkOf6akBWdeZsD/oU+B8szETCPASxoZXccjtFqpGoV
Xldkze0gcsyo6EMcmihFYQAv7nGW95sAxKftTMzufMAHzDYydgErHsOQ2TBjcHsz
yS2Y7q3YHOBx9SeOHbtcMlVe7d64c6m7cp7v6NK2fjKhkWXi0NTZ+dzJAW37ShRD
XBgMkqlduPeQFZIQrmvRq2hdCUnZusPPcfZw/3YfmQ6qRx68xjqnX1jUQCRFIaxG
CjyxP0NgstYrJUjaaQeKgmfz97/TE8uJ3YgGiBJCdxQ46EvCzeZ3XFfjqyu38qb3
jqjxFJJCmHTrr8fh9hA+G76/yqk34G0wB8nkoz9gXgphnXTP8wV3Q7xqkLtxRZko
T1kGVcTQ97uPrF6yedaniJGXflmuTJy10i52XkKP+K1/pXioKN+8i7S/8AKeRLRa
f89j8pYPEl7LMHyx+C4YTrAG2QqT8ejpiS8P2QDFRjghSUZTL8N2v0oLC/jxdrDg
K5LqBuyqYI/U2cu68wYuUOsyLQUun9smuQHyAqLzzX1uDSdOeoasMzb9JHP9ns4v
eFc5pIYNvF0WVat86mRycVl6Sk9ZZKJfdh2bUOO4S9Hfk75D+kzjYqBq2pDRVAYC
UsoXugn5XNSR9NuuUMEl4EY=
-----END CERTIFICATE-----
`)

func schedulerCrtBytes() ([]byte, error) {
	return _schedulerCrt, nil
}

func schedulerCrt() (*asset, error) {
	bytes, err := schedulerCrtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.crt", size: 1509, mode: os.FileMode(292), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerCsr = []byte(`-----BEGIN CERTIFICATE REQUEST-----
MIICWTCCAUECAQAwFDESMBAGA1UEAxMJc2NoZWR1bGVyMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEApfUo1wqIEJksT+spXwV8Epybqevqcfp7dVLJeiqH
kwoX1oxSJ7crENykgliL40jfod8koV0c2Bu05zDcXcef1dBdaVQ/npjs7zG1pO1U
Al3uHvEBO8KlJYAR3zRZu1CSi0z3vNq5DKKoo4h1tLyTiKQlli/Vk1son+WLPJL2
VeAGcwyplvqSr2SFLs7Oa12QDoTlwY4CPonAMbcCqdgGFykrHikkmP4+Pm8+D06f
ezdv9Dn5j8z4uoq3VG/lOnloby99C4iWawsaEThj0CSpgU+1xTp0z9NbzTGBnys2
XZwiEosN8+lTmS7j0K1wwArtqwBlWjw08hKnel+dqJUyJwIDAQABoAAwDQYJKoZI
hvcNAQELBQADggEBACCzpb3hj513V7MP6on5TfWar4K2Kuy2LzIp/S1BhO1XlDs8
AbuOx94a/O7nXSFGlEzbLqi5wGt9/1kO4XdzZhCxCezJpz6KW6/5XIKmcUP1wKA3
9ol22NKTuGq6o2OREyXkvR8+QK6qm4hRiuNnQLsUYym2QKh+jqn1sORQY2khSfJu
kcVW/49hanttpr9lWjImoJYXAUmr1W5dxLmNi6aS3r9v3czCmFVqKurlYdqzGlKx
phSgx+w6UeIORhivY//FvgvEuvUWRVT62XL75VR5ej4ptWbU/FqoLOqQ4UYLFsV1
Hd5TMg6o2/Vu41vTxVPQNH3a3kbDTy0hgklgZ+g=
-----END CERTIFICATE REQUEST-----
`)

func schedulerCsrBytes() ([]byte, error) {
	return _schedulerCsr, nil
}

func schedulerCsr() (*asset, error) {
	bytes, err := schedulerCsrBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.csr", size: 891, mode: os.FileMode(292), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schedulerKey = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEApfUo1wqIEJksT+spXwV8Epybqevqcfp7dVLJeiqHkwoX1oxS
J7crENykgliL40jfod8koV0c2Bu05zDcXcef1dBdaVQ/npjs7zG1pO1UAl3uHvEB
O8KlJYAR3zRZu1CSi0z3vNq5DKKoo4h1tLyTiKQlli/Vk1son+WLPJL2VeAGcwyp
lvqSr2SFLs7Oa12QDoTlwY4CPonAMbcCqdgGFykrHikkmP4+Pm8+D06fezdv9Dn5
j8z4uoq3VG/lOnloby99C4iWawsaEThj0CSpgU+1xTp0z9NbzTGBnys2XZwiEosN
8+lTmS7j0K1wwArtqwBlWjw08hKnel+dqJUyJwIDAQABAoIBAQCe2XzP6Kq4iITb
slIVO+C4x+JP0RrFImbNtAJZxx+h5MVQfVud3DuClk943Fx5nyU/gaFEOyYCzPJp
YGFt+kfJlvnyecuzeNlBUql1Rh1lbpcgUrtFglgk/uMcbLV/D+5VG8T9pbX+nCsi
7NkNuHrXDZdUnFCoDVdjRYny3xCevJdHw3yM8fl9MSkKxgnJ5PNHFd+To6BGTICd
5tGuIKJyszZkdcqKp4fzjw+PBC4KOmRDx3nQuvrRo3pEB702/akNtd/3/MIziAsd
G6FluJCsQxqBRogM1fl36WuyCopTEsCrB6PRWE7Gd5U6CdNhpYmdx0HHiaARN3/W
6n/hNAABAoGBAMYBqnszzrGnZEl3Vu3JmMiRaRQG1d/OrDKAra6lNSAVOjv0l11x
ywmH5b4AZkH3Tf93vhtOEwb1udLH53qRcF6WHlmF8R8oXIkgCOPLB5I0TCMO2KFs
uodoFe/P8X7OSI2ggjaD2KreAk5DeAsoYePEfaYnhOP/tu8hnrR+GsABAoGBANaQ
gIBp0j4Y7RnFdi1vrxBLFEykctLPJSFS0SjFrHQqzTqhFZbuMDuEAqsOHfXp70Xv
75cVZT3LhAgtjVVOPPCx///8NvVBanGcn+NlACOQnLzE/OGdsQ6luOriGE8BtkZ/
5G11c5LOEVD58B7WqKRJafHIYFPdgZhwnA5pAfInAoGBAKpQNoagilJO7Dkw+Emy
VMN4J8z9ECvhBkauXjZRjj+ZYqy9dxD+VylMhjWG/G4TPTjXk2LDJiSfagW+wwGv
ZdtF/rb8OemV+vpL3rmpIksExtSE6Zr3/f2Ibw4Ga++pmciQXlBr2gsmyQ7ug6v9
QS38DiPD7E983aoU3gDcU0ABAoGAeKvIOXBKV7Y5ErdlIWSgdm9jOT97fGgXn8gt
7dpOhP7VcVXLCJlo8u/peD52RymL8i9g9f2IdNqSpO7Jf+KCj3PsYBF+7ywdK0xE
9+SD0XyxSdEXz+OaAnzdpOwHc9eopbmjxJO7riLKxlnq280qB0tqlBp3YnM/QXaD
re8Msx0CgYBehiSH0nlc0ciKHCdV9U/UtXgj7VaQXSDjUjw5meKTPdlMXK69TvTK
nCUtDXyvWG0XLQmlRrxta+ImBNrz2D5Y5/4FRp9W5EhN3JGHA9dZ7apT2e5Dv0wd
1aq4qpZdL0rqlxrncZm1ObOwltVZf93uPRPsgn8DpHDouL087kHGWQ==
-----END RSA PRIVATE KEY-----
`)

func schedulerKeyBytes() ([]byte, error) {
	return _schedulerKey, nil
}

func schedulerKey() (*asset, error) {
	bytes, err := schedulerKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scheduler.key", size: 1679, mode: os.FileMode(288), modTime: time.Unix(1489505979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"adapter-rlp.crt":        adapterRlpCrt,
	"adapter-rlp.csr":        adapterRlpCsr,
	"adapter-rlp.key":        adapterRlpKey,
	"adapter.crt":            adapterCrt,
	"adapter.csr":            adapterCsr,
	"adapter.key":            adapterKey,
	"fake-log-provider.crt":  fakeLogProviderCrt,
	"fake-log-provider.csr":  fakeLogProviderCsr,
	"fake-log-provider.key":  fakeLogProviderKey,
	"loggregator-ca.crl":     loggregatorCaCrl,
	"loggregator-ca.crt":     loggregatorCaCrt,
	"loggregator-ca.key":     loggregatorCaKey,
	"scalable-syslog-ca.crl": scalableSyslogCaCrl,
	"scalable-syslog-ca.crt": scalableSyslogCaCrt,
	"scalable-syslog-ca.key": scalableSyslogCaKey,
	"scheduler.crt":          schedulerCrt,
	"scheduler.csr":          schedulerCsr,
	"scheduler.key":          schedulerKey,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"adapter-rlp.crt":        &bintree{adapterRlpCrt, map[string]*bintree{}},
	"adapter-rlp.csr":        &bintree{adapterRlpCsr, map[string]*bintree{}},
	"adapter-rlp.key":        &bintree{adapterRlpKey, map[string]*bintree{}},
	"adapter.crt":            &bintree{adapterCrt, map[string]*bintree{}},
	"adapter.csr":            &bintree{adapterCsr, map[string]*bintree{}},
	"adapter.key":            &bintree{adapterKey, map[string]*bintree{}},
	"fake-log-provider.crt":  &bintree{fakeLogProviderCrt, map[string]*bintree{}},
	"fake-log-provider.csr":  &bintree{fakeLogProviderCsr, map[string]*bintree{}},
	"fake-log-provider.key":  &bintree{fakeLogProviderKey, map[string]*bintree{}},
	"loggregator-ca.crl":     &bintree{loggregatorCaCrl, map[string]*bintree{}},
	"loggregator-ca.crt":     &bintree{loggregatorCaCrt, map[string]*bintree{}},
	"loggregator-ca.key":     &bintree{loggregatorCaKey, map[string]*bintree{}},
	"scalable-syslog-ca.crl": &bintree{scalableSyslogCaCrl, map[string]*bintree{}},
	"scalable-syslog-ca.crt": &bintree{scalableSyslogCaCrt, map[string]*bintree{}},
	"scalable-syslog-ca.key": &bintree{scalableSyslogCaKey, map[string]*bintree{}},
	"scheduler.crt":          &bintree{schedulerCrt, map[string]*bintree{}},
	"scheduler.csr":          &bintree{schedulerCsr, map[string]*bintree{}},
	"scheduler.key":          &bintree{schedulerKey, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
